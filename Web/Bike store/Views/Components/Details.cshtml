@model IEnumerable<NoNameBikes.Models.Product>

@{
    ViewData["Title"] = "Details";
    Product selectedProduct = Model.First();
}

<style>
    #grid {
        display: grid;
        grid-template-columns: auto auto;
        grid-template-rows: auto;
        grid-template-areas: 
            "pic name";
        width: 1000px;
        grid-gap: 20px;
    }

    #namedesc {
        grid-area: name;
    }

    #pic {
        grid-area: pic;
    }

    img {
        width: 500px;
        height: 300px;
        border-style: solid;
        border-color: black;
        padding: 20px;
    }

    .sale {
        color: red;
        margin: 0px;
    }

    .SalePrice {
        font-weight: bold;
        padding-bottom: 5px;
        padding-left: 43px;
    }

    .discount {
        font-size: 15px;
        padding-left: 20px;
    }

    #price {
        margin-bottom: 0px;
    }
</style>

<br />
<br />
<div id="grid">
    @{
        var base64 = Convert.ToBase64String(selectedProduct.ThumbNailPhoto);
        var imgSrc = string.Format("data:image/gif;base64,{0}", base64);
    }
    <div id="pic"><img class="img" src='@imgSrc' /></div>
    <div id="namedesc">
        <form asp-action="AddToCart" asp-controller="Home">
            <h3>@selectedProduct.Name</h3>
            <p>@ViewData["description"]</p>
            <hr />
            <label for="prices">Price:</label>
            @{
                if (selectedProduct.SalePrice != null)
                {
                    if (DateTime.Compare((DateTime)selectedProduct.SaleEndDate, DateTime.Now) > 0)
                    {
                        decimal discount = selectedProduct.ListPrice - (decimal)selectedProduct.SalePrice;
                        <strike>@Math.Round(selectedProduct.ListPrice, 2)$</strike> <label class="sale discount">-@discount.ToString().Substring(0, discount.ToString().Length - 2)$</label>

                        <p class="sale SalePrice">  @selectedProduct.SalePrice.ToString().Substring(0, selectedProduct.SalePrice.ToString().Length - 2)$</p>
                    }
                    else
                    {
                        <strong>$@Math.Round(selectedProduct.ListPrice, 2)</strong>
                    }
                }
                else
                {
                    <strong>$@Math.Round(selectedProduct.ListPrice, 2)</strong>
                }

            }

            <input type="hidden" name="@nameof(selectedProduct.ProductModelId)" value="@selectedProduct.ProductModelId" />
            <br />
            <label for="Quantity">Quantity:</label>
            <input type="number" min="1" size="1" name="Quantity" value="1" />
            <input class="btn btn-primary" type="submit" value="Add To Cart" />
        </form>
    </div>
</div>
