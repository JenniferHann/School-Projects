@model IEnumerable<NoNameBikes.Models.Product>

@{
    ViewData["Title"] = "Détails";
    Product selectedProduct = Model.First();
}

<style>
    #grid {
        display: grid;
        grid-template-columns: auto auto;
        grid-template-rows: auto;
        grid-template-areas: "pic name";
        width: 1000px;
        grid-gap: 20px;
    }

    #namedesc {
        grid-area: name;
    }

    #pic {
        grid-area: pic;
    }

    img {
        width: 500px;
        height: 300px;
        border-style: solid;
        border-color: black;
        padding: 20px;
    }

    .sale {
        color: red;
        margin: 0px;
    }

    .SalePrice {
        font-weight: bold;
        padding-bottom: 5px;
        padding-left: 43px;
    }

    .discount {
        font-size: 15px;
        padding-left: 20px;
    }

    #price {
        margin-bottom: 0px;
    }
</style>

<br />
<br />
<div id="grid">
    @{
        var base64 = Convert.ToBase64String(selectedProduct.ThumbNailPhoto);
        if (base64 == "R0lGODlhUAAxAPcAAAAAAIAAAACAAICAAAAAgIAAgACAgICAgMDAwP8AAAD/AP//AAAA//8A/wD//////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAZgAAmQAAzAAA/wAzAAAzMwAzZgAzmQAzzAAz/wBmAABmMwBmZgBmmQBmzABm/wCZAACZMwCZZgCZmQCZzACZ/wDMAADMMwDMZgDMmQDMzADM/wD/AAD/MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMzADMzMzMzZjMzmTMzzDMz/zNmADNmMzNmZjNmmTNmzDNm/zOZADOZMzOZZjOZmTOZzDOZ/zPMADPMMzPMZjPMmTPMzDPM/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2YzAGYzM2YzZmYzmWYzzGYz/2ZmAGZmM2ZmZmZmmWZmzGZm/2aZAGaZM2aZZmaZmWaZzGaZ/2bMAGbMM2bMZmbMmWbMzGbM/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kAZpkAmZkAzJkA/5kzAJkzM5kzZpkzmZkzzJkz/5lmAJlmM5lmZplmmZlmzJlm/5mZAJmZM5mZZpmZmZmZzJmZ/5nMAJnMM5nMZpnMmZnMzJnM/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwAM8wAZswAmcwAzMwA/8wzAMwzM8wzZswzmcwzzMwz/8xmAMxmM8xmZsxmmcxmzMxm/8yZAMyZM8yZZsyZmcyZzMyZ/8zMAMzMM8zMZszMmczMzMzM/8z/AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A//8zAP8zM/8zZv8zmf8zzP8z//9mAP9mM/9mZv9mmf9mzP9m//+ZAP+ZM/+ZZv+Zmf+ZzP+Z///MAP/MM//MZv/Mmf/MzP/M////AP//M///Zv//mf//zP///yH5BAEAABAALAAAAABQADEAAAj/AP8JHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePIEOKHEmypMmTKFOqXJkRBYqBLhfGZPnQ5ct/MxPmpMnQpsCZNm/CfBnTZ86gQ3HeRMoRadGlQpUqJfoUZ9KnVH9GxVhUKtCoVaWKnZrVK9SmVMPuVHvWrFisPjd+LbuW7tmvb8t6nJuXIFutfbH2lSt07ta/eeOy3clTYuGtjS8yjUy5suXLmDHHdRjWIGPGIjdDBA3YL2SQVY+mvQsVL16yqLOqfuyWtlHZbTv+nY176G67H38DTs068GrSkoMSN+62+fKQqrW2Xe6aem7CSaf6fq7ceevTmcOLEh9Pvrz58+jTq1/Pvr379+8DAgA7")
        {
            <div id="pic"><img src="~/images/NoImageFR.PNG" alt="Image non disponible"  /></div>
        }
        else
        {
            var imgsrc = string.Format("data:image/gif;base64,{0}", base64);
            <div id="pic"><img src='@imgsrc' alt="image du produit" /></div>
        }
    }
<form asp-action="AddToCartFR" asp-controller="Home">
    <div id="namedesc">
        @{
            string name = "";
            if (selectedProduct.Name.Contains(" Mountain Tire") || selectedProduct.Name.Contains(" Road Tire"))
            {
                name = selectedProduct.Name.Split(' ')[0] + " Pneus de montagne";
                name = selectedProduct.Name.Split(' ')[0] + " Pneus de route";
            }
            else if (selectedProduct.Name.Contains(" Tire Tube"))
            {
                if (selectedProduct.Name.Contains("Mountain"))
                    name = "Pneus tube montagne";
                if (selectedProduct.Name.Contains("Road"))
                    name = "Pneus tube route";
                if (selectedProduct.Name.Contains("Touring"))
                    name = "Pneus tube randonné";

            }
            else if (selectedProduct.Name.Contains("Patch kit"))
            {
                name = "Kit de patch";
            }
            else if (selectedProduct.Name.Contains("Touring Tire"))
            {
                name = "Pneus de randonné";
            }
            else if (selectedProduct.Name.Contains("Hitch Rack - 4-Bike"))
            {
                name = selectedProduct.Name.Replace("Hitch Rack - 4-Bike", "Support d'attelage - 4 vélos");
            }
            else if (selectedProduct.Name.Contains("All-Purpose Bike Stand"))
            {
                name = selectedProduct.Name.Replace("All-Purpose Bike Stand", "Support de vélo tout usage");
            }
            else if (selectedProduct.Name.Contains("Mountain Bottle Cage"))
            {
                name = selectedProduct.Name.Replace("Mountain Bottle Cage", "Porte-bidon de montagne");
            }
            else if (selectedProduct.Name.Contains("Road Bottle Cage"))
            {
                name = selectedProduct.Name.Replace("Road Bottle Cage", "Porte-bidon de route");
            }
            else if (selectedProduct.Name.Contains("Water Bottle"))
            {
                name = selectedProduct.Name.Replace("Water Bottle", "Bouteille d'eau");
            }
            else if (selectedProduct.Name.Contains("Bike Wash"))
            {
                name = selectedProduct.Name.Replace("Bike Wash", "Lavage de vélo");
            }
            else if (selectedProduct.Name.Contains("Fender Set - Mountain"))
            {
                name = selectedProduct.Name.Replace("Fender Set - Mountain", "Jeu de garde-boue - montagne");
            }
            else if (selectedProduct.Name.Contains("Hydration Pack"))
            {
                name = selectedProduct.Name.Replace("Hydration Pack", "Pack d'hydration");
            }


        }
        <h3>@name</h3>
        <p>@ViewData["description"]</p>
        <hr />
        <label for="prices" id="price">Prix:</label>
        @{
            if (selectedProduct.SalePrice != null)
            {

                if (DateTime.Compare((DateTime)selectedProduct.SaleEndDate, DateTime.Now) > 0)
                {
                    decimal discount = selectedProduct.ListPrice - (decimal)selectedProduct.SalePrice;
                    <strike>@Math.Round(selectedProduct.ListPrice, 2)$</strike> <label class="sale discount">-@discount.ToString().Substring(0, discount.ToString().Length - 2)$</label>

                    <p class="sale SalePrice">  @selectedProduct.SalePrice.ToString().Substring(0, selectedProduct.SalePrice.ToString().Length - 2)$</p>
                }
                else
                {
                    <strong>$@Math.Round(selectedProduct.ListPrice, 2)</strong>
                }
            }
            else
            {
                <strong>$@Math.Round(selectedProduct.ListPrice, 2)</strong>
            }
        }

    </div>
    <input type="hidden" name="@nameof(selectedProduct.ProductModelId)" value="@selectedProduct.ProductModelId" />
    <br />
    <label for="Quantity">Quantité:</label>
    <input type="number" min="1" size="1" name="Quantity" value="1" />
    <input class="btn btn-primary" type="submit" value="Ajouter au chariot" />
</form>
</div>